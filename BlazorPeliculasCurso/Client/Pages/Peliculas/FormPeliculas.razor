<EditForm Model="Pelicula" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="mb-3">
        <label>Titulo:</label>
        <InputText class="form-control" @bind-Value="@Pelicula.Titulo"></InputText>
        <ValidationMessage For="@(()=> Pelicula.Titulo)"></ValidationMessage>
    </div>
    <div class="mb-3">
        <label>En Cartelera:</label>
        <InputCheckbox @bind-Value="@Pelicula.EnCartelera"></InputCheckbox>
        <ValidationMessage For="@(()=> Pelicula.EnCartelera)"></ValidationMessage>
    </div>
    <div class="mb-3">
        <label>Fecha de lanzamiento:</label>
        <InputDate class="form-control" @bind-Value="@Pelicula.Lanzamiento"></InputDate>
        <ValidationMessage For="@(()=> Pelicula.Lanzamiento)"></ValidationMessage>
    </div>
    <div class="mb-3">
        <InputImg Label="Selecciona Foto" ImagenSeleccionada="ImagenSeleccionada" imgURL="@imgURL"></InputImg>
    </div>

    <div class="mb-3 form-markdown">
        <InputMarkdown @bind-Value="@Pelicula.Resumen" For="@(() => Pelicula.Resumen)" Label="Resumen"></InputMarkdown>
    </div>
   
    <div class="mb-3">
        <label>Generos</label>
        <div>
            <SelectorMultiple NoSeleccionados="NoSeleccionados" Seleccionados="Seleccionados"></SelectorMultiple>
        </div>
    </div>
    <div class="mb-3">
        <label>Actores:</label>
        <div>
            <SelectorMultipleTypeahead Context="Actor" SearchMethod="BuscarActores" ElementosSeleccionados="ActoresSeleccionados">
                <MyListTemplate>
                    @Actor.Nombre
                </MyListTemplate>
                <MyResultTemplate>
                    <img style="width:50px" src="@Actor.Foto" />
                    @Actor.Nombre
                </MyResultTemplate>
            </SelectorMultipleTypeahead>
        </div>
    </div>

    <button class="btn btn-success">Guardar Cambios</button>
</EditForm>


@code {
    [Parameter][EditorRequired] public Pelicula Pelicula { get; set; } = null!;

    [Parameter][EditorRequired] public EventCallback OnValidSubmit{ get; set; }

    [Parameter] public List<Genero> GenerosSeleccionados { get; set; } = new List<Genero>();

    [Parameter][EditorRequired] public List<Genero> GenerosNoSeleccionados { get; set; } = new List<Genero>();

    [Parameter] public List<Actor> ActoresSeleccionados { get; set; } = new List<Actor>();

    private List<SelectorMultipleModel> Seleccionados { get; set; } = new List<SelectorMultipleModel>();

    private List<SelectorMultipleModel> NoSeleccionados { get; set; } = new List<SelectorMultipleModel>();

    string? imgURL;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Pelicula.Poster))
        {
            imgURL = Pelicula.Poster;
            Pelicula.Poster= null;
        }

        Seleccionados = GenerosSeleccionados.Select( x => new SelectorMultipleModel(x.Id.ToString(), x.Nombre)).ToList();

        NoSeleccionados = GenerosNoSeleccionados.Select( x => new SelectorMultipleModel(x.Id.ToString(), x.Nombre)).ToList();
    }

    private void ImagenSeleccionada(string imgBase64)
    {
        Pelicula.Poster= imgBase64;
        imgURL = null;
    }

    private async Task<IEnumerable<Actor>> BuscarActores (string searchText){
        return new List<Actor>(){
            new Actor{Id = 1, Nombre = "Tom Holland", Foto="https://www.hola.com/imagenes/actualidad/20221115220987/tom-holland-spiderman-vengadores-al/1-165-105/tom-t.jpg?im=Resize=(680)"},
            new Actor{Id = 2, Nombre = "Tom Hanks", Foto="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTI4_9WoD7HzyNKB1SEcmuf3FBmg-tiyLVBgmCeCIYaCg&s"}
        };
    }

}
